---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  Template to create 3 private subnets. A NAT Gateway that provides internet access for private subnets will be deployed into existing provided public subnets.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VPC
      - AvailabilityZone1
      - AvailabilityZone2
      - AvailabilityZone3
      - PublicSubnet1
      - PublicSubnet2
      - PublicSubnet3
      - PrivateSubnet1Cidr
      - PrivateSubnet2Cidr
      - PrivateSubnet3Cidr
Parameters:
  VPC:
    Description: VPC to deploy subnets into
    Type: AWS::EC2::VPC::Id
    Default: vpc-36639c52
  AvailabilityZone1:
    Description: Availability zone 1
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-west-1a
  AvailabilityZone2:
    Description: Availability zone 2
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-west-1b
  AvailabilityZone3:
    Description: Availability zone 3
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-west-1c
  PublicSubnet1:
    Description: Public subnet 1
    Type: AWS::EC2::Subnet::Id
    Default: subnet-b59b54c3
  PublicSubnet2:
    Description: Public subnet 2
    Type: AWS::EC2::Subnet::Id
    Default: subnet-1cba5f44
  PublicSubnet3:
    Description: Public subnet 3
    Type: AWS::EC2::Subnet::Id
    Default: subnet-fcfa5e98
  PrivateSubnet1Cidr:
    Description: CIDR for Private subnet 1
    Type: String
    Default: 172.24.250.0/24
  PrivateSubnet2Cidr:
    Description: CIDR for Private subnet 2
    Type: String
    Default: 172.24.251.0/24
  PrivateSubnet3Cidr:
    Description: CIDR for Private subnet 3
    Type: String
    Default: 172.24.252.0/24
  TagEnvironment:
    Description: Tag detail for the Environment
    Type: String
    Default: p
  TagTeamDL:
    Description: Tag of the TeamDL.
    Type: String
    ConstraintDescription: There must be a valid email address for the TeamDL
    AllowedPattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
    Default: universal.publishing.platform@ft.com
  TagSystemCode:
    Description: Tag detail for the SystemCode
    Type: String
    Default: upp
  TagIpCode:
    Description: Tag detail for the ipCode
    Type: String
    Default: P196
  TagDescription:
    Description: Tag detail for the describing the instance.
    Type: String
    Default: Subnets for Neo4j HA Cluster
Resources:
  # Private subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet1Cidr
      AvailabilityZone:
        Ref: AvailabilityZone1
      Tags:
      - Key: Name
        Value: Neo4j HA Private Subnet 1
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet2Cidr
      AvailabilityZone:
        Ref: AvailabilityZone2
      Tags:
      - Key: Name
        Value: Neo4j HA Private Subnet 2
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet3Cidr
      AvailabilityZone:
        Ref: AvailabilityZone3
      Tags:
      - Key: Name
        Value: Neo4j HA Private Subnet 3
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
  # Route Tables for private subnets
  PrivateSubnet1RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Neo4j HA Private Subnet 1 RouteTable
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
  PrivateSubnet2RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Neo4j HA Private Subnet 2 RouteTable
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
  PrivateSubnet3RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Neo4j HA Private Subnet 3 RouteTable
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
  # Route table association with Private subneta
  PrivateSubnet1RouteAssociate:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: PrivateSubnet1RouteTable
      SubnetId:
        Ref: PrivateSubnet1
  PrivateSubnet2RouteAssociate:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: PrivateSubnet2RouteTable
      SubnetId:
        Ref: PrivateSubnet2
  PrivateSubnet3RouteAssociate:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: PrivateSubnet3RouteTable
      SubnetId:
        Ref: PrivateSubnet3
  # Private subnet routes via NAT Gateway
  PrivateSubnet1RouteViaNATGW:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGW1
      RouteTableId:
        Ref: PrivateSubnet1RouteTable
  PrivateSubnet2RouteViaNATGW:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGW2
      RouteTableId:
        Ref: PrivateSubnet2RouteTable
  PrivateSubnet3RouteViaNATGW:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGW3
      RouteTableId:
        Ref: PrivateSubnet3RouteTable
  # NAT Gateways with ElasticIPs for Public subnets
  ElasticIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Ref: VPC
  ElasticIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Ref: VPC
  ElasticIP3:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Ref: VPC
  NatGW1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIP1.AllocationId
      SubnetId:
        Ref: PublicSubnet1
  NatGW2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIP2.AllocationId
      SubnetId:
        Ref: PublicSubnet2
  NatGW3:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIP3.AllocationId
      SubnetId:
        Ref: PublicSubnet3

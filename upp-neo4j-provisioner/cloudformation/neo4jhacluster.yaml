---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  Template to spin up a UPP Neo4j cluster.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label: Network Configuration
      Parameters:
      - VPC
      - Subnet1
      - Subnet2
      - Subnet3
    - Label: AWS Machine Config
      Parameters:
      - InstanceType
      - ImageId
      - IamInstanceProfile
      - EbsSnapshot
    - Label: Cluster Configuration Options
      Parameters:
      - CocoEnvironmentTag
      - UserData1
      - UserData2
      - UserData3
    - Label: FT standard tagging
      Parameters:
      - TagEnvironment
      - TagTeamDL
      - TagSystemCode
      - TagIpCode
      - TagDescription
      - TagName
      - TagStopSchedule

Parameters:

  # Defines the VPC and Subnets that are to be used in provisioning.  Defaults to the eu-west-1 vpc/subnets.
  VPC:
    Description: This is the VPC the stack will be deployed inside.
    Type: AWS::EC2::VPC::Id
    Default: vpc-9fcb94fb
  Subnet1:
    Description: Subnet 172.24.0.0/18, eu-west-1a
    Type: AWS::EC2::Subnet::Id
    Default: subnet-5587b723
  Subnet2:
    Description: Subnet 172.24.64.0/18, eu-west-1b
    Type: AWS::EC2::Subnet::Id
    Default: subnet-d8d8a180
  Subnet3:
    Description: Subnet 172.24.128.0/18, eu-west-1c
    Type: AWS::EC2::Subnet::Id
    Default: subnet-4af6ca2e

  # AWS machine information - size, OS etc.
  InstanceType:
    Description: The type and size of the instance. Check documentation for recommended types.
    Type: String
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    Default: r4.2xlarge
  ImageId:
    Description: The CoreOS AMI to be used.
    Type: AWS::EC2::Image::Id
    Default: ami-ac8fd4ca
  IamInstanceProfile:
    Description: What IAM profile to give to this instance - for future use. Currently has to be FT-Linux-Role
    Type: String
    Default: FT-Linux-Role
  EbsSnapshot:
    Description: SnapshotId of the EBS Snapshot used to provision the disks.
    Type: String
    Default: snap-0e9ecacdd229f9d29

  # Parameters than are used in the user data.
  CocoEnvironmentTag:
    Description: Which enviroment this cluster is attached to (eg. prod-uk).  Must be no more than 12 characters.
    Type: String
  UserData1:
    Description: Base64-encoded instance userdata part 1.
    Type: String
  UserData2:
    Description: Base64-encoded instance userdata part 2.
    Type: String
  UserData3:
    Description: Base64-encoded instance userdata part 3.
    Type: String

  # FT Standard AWS Tags.
  TagEnvironment:
    Description: Tag detail for the Environment
    Type: String
    AllowedValues:
      - 'd'
      - 't'
      - 'p'
      - 'int'
    Default: d
  TagTeamDL:
    Description: Tag of the TeamDL.
    Type: String
    ConstraintDescription: There must be a valid email address for the TeamDL
    AllowedPattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
    Default: universal.publishing.platform@ft.com
  TagSystemCode:
    Description: Tag detail for the SystemCode
    Type: String
    Default: upp
  TagIpCode:
    Description: Tag detail for the ipCode
    Type: String
    Default: P196
  TagDescription:
    Description: Tag detail for the describing the instance.
    Type: String
    Default: Neo4j Cluster
  TagName:
    Description: Tag detail for the Name used in the console of the instance. NOT THE HOSTNAME OF THE INSTANCE.
    Type: String
    Default: Neo4j Cluster
  TagStopSchedule:
    Description: Tag detail for the when the instance is to be powered off.
    Type: String
    Default: nostop

Resources:

  # Neo4J security group
  Neo4JSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bolt protocol access for Neo4J
      VpcId: !Ref VPC
      Tags:
      - Key: Description
        Value: Bolt protocol access for Neo4J
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 7687
        ToPort: 7687
        CidrIp: 0.0.0.0/0

  # CoreOS security group
  CoreOSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CoreOS security access
      VpcId: !Ref VPC
      Tags:
      - Key: Description
        Value: CoreOS security access
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
      SecurityGroupIngress:
      # OSB + LDNWebPerf
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 82.136.1.214/32
      # Park Royal
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 213.216.148.1/32
      # XP - Cluj Office
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 194.117.242.0/23
      # EU VPN Client
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 62.25.64.1/32
      # US VPN Client
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 64.210.200.1/32
      # Allow 80 from everywhere
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      # Allow 443 from everywhere
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      # Allow internal requests
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 172.24.0.0/16
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      # Allow timesync/ntp out
      - IpProtocol: udp
        FromPort: 123
        ToPort: 123
        CidrIp: 0.0.0.0/0

  # Create Neo4j instance
  Neo4jInstance1:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref CoreOSSecurityGroup
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref IamInstanceProfile
      BlockDeviceMappings:
      - DeviceName: "/dev/sdc"
        Ebs:
          VolumeType: gp2
          SnapshotId: !Ref EbsSnapshot
      Tags:
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
      - Key: Name
        Value: !Sub ${TagName} - ${CocoEnvironmentTag}
      - Key: stopSchedule
        Value: !Ref TagStopSchedule
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
      UserData:
        !Join ["", [!Ref UserData1, !Ref UserData2, !Ref UserData3]]

  # Create Neo4j instance
  Neo4jInstance2:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref CoreOSSecurityGroup
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref IamInstanceProfile
      BlockDeviceMappings:
      - DeviceName: "/dev/sdc"
        Ebs:
          VolumeType: gp2
          SnapshotId: !Ref EbsSnapshot
      Tags:
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
      - Key: Name
        Value: !Sub ${TagName} - ${CocoEnvironmentTag}
      - Key: stopSchedule
        Value: !Ref TagStopSchedule
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
      UserData:
        !Join ["", [!Ref UserData1, !Ref UserData2, !Ref UserData3]]

  # Create Neo4j instance
  Neo4jInstance3:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref CoreOSSecurityGroup
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref IamInstanceProfile
      BlockDeviceMappings:
      - DeviceName: "/dev/sdc"
        Ebs:
          VolumeType: gp2
          SnapshotId: !Ref EbsSnapshot
      Tags:
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: description
        Value: !Ref TagDescription
      - Key: Name
        Value: !Sub ${TagName} - ${CocoEnvironmentTag}
      - Key: stopSchedule
        Value: !Ref TagStopSchedule
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
      UserData:
        !Join ["", [!Ref UserData1, !Ref UserData2, !Ref UserData3]]

  #Application Read Load Balancer
  ReadAlb:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Sub ${AWS::StackName}-read-alb
      Scheme: internal
      SecurityGroups:
        - !Ref CoreOSSecurityGroup
        - !Ref Neo4JSecurityGroup
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
        - !Ref Subnet3
      Tags:
      - Key: Description
        Value: !Sub Read ALB for ${CocoEnvironmentTag} Neo4J Cluster
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
  ReadAlbTargetGroup7474:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-read-7474
      Port: 7474
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 5
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckPort: 7474
      HealthCheckTimeoutSeconds: 3
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Targets:
      - Id:
          Ref: Neo4jInstance1
      - Id:
          Ref: Neo4jInstance2
      - Id:
          Ref: Neo4jInstance3
      Tags:
      - Key: Description
        Value: !Sub Target Group for Read ALB for ${CocoEnvironmentTag} Neo4J Cluster
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
  ReadAlbTargetGroup7687:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-read-7687
      Port: 7687
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 5
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckPort: 7474
      HealthCheckTimeoutSeconds: 3
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Targets:
      - Id:
          Ref: Neo4jInstance1
      - Id:
          Ref: Neo4jInstance2
      - Id:
          Ref: Neo4jInstance3
      Tags:
      - Key: Description
        Value: !Sub Target Group for Read ALB for ${CocoEnvironmentTag} Neo4J Cluster
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
  ReadAlbListener7474:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: ReadAlbTargetGroup7474
      LoadBalancerArn:
        Ref: ReadAlb
      Port: 80
      Protocol: HTTP
  ReadAlbListener7687:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: ReadAlbTargetGroup7687
      LoadBalancerArn:
        Ref: ReadAlb
      Port: 7687
      Protocol: HTTP

  #Application Write Load Balancer
  WriteAlb:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Sub ${AWS::StackName}-write-alb
      Scheme: internal
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 120
      SecurityGroups:
        - !Ref CoreOSSecurityGroup
        - !Ref Neo4JSecurityGroup
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
        - !Ref Subnet3
      Tags:
      - Key: Description
        Value: !Sub Write ALB for ${CocoEnvironmentTag} Neo4J Cluster
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
  WriteAlbTargetGroup7474:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-write-7474
      Port: 7474
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 5
      HealthCheckProtocol: HTTP
      HealthCheckPath: /db/manage/server/core/writable
      HealthCheckPort: 7474
      HealthCheckTimeoutSeconds: 3
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Targets:
      - Id:
          Ref: Neo4jInstance1
      - Id:
          Ref: Neo4jInstance2
      - Id:
          Ref: Neo4jInstance3
      Tags:
      - Key: Description
        Value: !Sub Target Group for Write ALB for ${CocoEnvironmentTag} Neo4J Cluster
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
  WriteAlbTargetGroup7687:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-write-7687
      Port: 7687
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 5
      HealthCheckProtocol: HTTP
      HealthCheckPath: /db/manage/server/core/writable
      HealthCheckPort: 7474
      HealthCheckTimeoutSeconds: 3
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Targets:
      - Id:
          Ref: Neo4jInstance1
      - Id:
          Ref: Neo4jInstance2
      - Id:
          Ref: Neo4jInstance3
      Tags:
      - Key: Description
        Value: !Sub Target Group for Write ALB for ${CocoEnvironmentTag} Neo4J Cluster
      - Key: environment
        Value: !Ref TagEnvironment
      - Key: teamDL
        Value: !Ref TagTeamDL
      - Key: systemCode
        Value: !Ref TagSystemCode
      - Key: ipCode
        Value: !Ref TagIpCode
      - Key: coco-environment-tag
        Value: !Ref CocoEnvironmentTag
  WriteAlbListener7474:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WriteAlbTargetGroup7474
      LoadBalancerArn:
        Ref: WriteAlb
      Port: 80
      Protocol: HTTP
  WriteAlbListener7687:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WriteAlbTargetGroup7687
      LoadBalancerArn:
        Ref: WriteAlb
      Port: 7687
      Protocol: HTTP

Outputs:
  ReadAlbDNS:
    Description: DNS name of newly created Application Read Load Balancer
    Value: !GetAtt ReadAlb.DNSName
  WriteAlbDNS:
    Description: DNS name of newly created Application Write Load Balancer
    Value: !GetAtt WriteAlb.DNSName

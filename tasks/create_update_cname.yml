---
# This task will create/update CNAME record

- include: cname_details.yml

- name: Do DNS lookup to set facts
  set_fact:
    dns_lookup_output: "{{ lookup('dig', '{{ cluster_name }}.in.ft.com/CNAME') }}"

- name: If it already exists, update the existing CNAME record
  uri:
    url: https://dns-api.in.ft.com/v2/
    method: PUT
    HEADER_x-api-key: "{{ konstructor_api_key }}"
    body:
      zone: ft.com
      name: "{{ cluster_name }}.in"
      # trim the last character of the FQDN - Dyn doesn't like the trailing dot
      oldRdata: "{{ dns_lookup_output[:-1] }}"
      newRdata: "{{ rds_hostname }}"
      ttl: "300"
      emailAddress: "universal.publishing.platform@ft.com"
    body_format: json
  register: dns_update_output
  when: dns_lookup_output != "NXDOMAIN"

- name: DNS update output
  debug:
    msg: "{{dns_update_output}}"

- name: If it doesn't exist, create a new CNAME record
  uri:
    url: https://dns-api.in.ft.com/v2/
    method: POST
    HEADER_x-api-key: "{{ konstructor_api_key }}"
    body:
      zone: ft.com
      name: "{{ cluster_name }}.in"
      rdata: "{{ rds_hostname }}"
      ttl: "300"
      emailAddress: "universal.publishing.platform@ft.com"
    body_format: json
  register: dns_create_output
  when: dns_lookup_output == "NXDOMAIN"

- name: DNS create output
  debug:
    msg: "{{ dns_create_output }}"
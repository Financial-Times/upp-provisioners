version: 2
workflows:
  version: 2
  build:
    jobs:
      - trigger-provisioner-builds
jobs:
  trigger-provisioner-builds:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - run:
          name: Trigger builds of changed provisioners
          command: |
            apk -q --update add curl
            .circleci/build_provisioners.sh
  upp-elasticsearch-provisioner:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}
          paths:
            - /caches/docker-cache.tar
      - run:
          name: Load previous Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/docker-cache.tar | true
      - run:
          name: Set Docker image tag based on branch
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] ; then
              echo 'export DOCKER_TAG=latest' >> $BASH_ENV
            else
              echo 'export DOCKER_TAG=${CIRCLE_BRANCH}' >> $BASH_ENV
            fi
      - run:
          name: Build Docker image
          command: |
            source ${BASH_ENV}
            docker build --cache-from=coco/${CIRCLE_JOB}:${DOCKER_TAG} -t coco/${CIRCLE_JOB}:${DOCKER_TAG} ${CIRCLE_JOB}/
      - run:
          name: Create new Docker image layer cache
          command: |
            source ${BASH_ENV}
            mkdir -p /caches
            docker save -o /caches/docker-cache.tar coco/${CIRCLE_JOB}:${DOCKER_TAG}
      - save_cache:
          key: v1-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/docker-cache.tar
      - deploy:
          name: Push Docker image
          command: |
            source ${BASH_ENV}
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push coco/${CIRCLE_JOB}:${DOCKER_TAG}
  upp-delivery-provisioner:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}
          paths:
            - /caches/docker-cache.tar
      - run:
          name: Load previous Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/docker-cache.tar | true
      - run:
          name: Set Docker image tag based on branch
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] ; then
              echo 'export DOCKER_TAG=latest' >> $BASH_ENV
            else
              echo 'export DOCKER_TAG=${CIRCLE_BRANCH}' >> $BASH_ENV
            fi
      - run:
          name: Build Docker image
          command: |
            source ${BASH_ENV}
            docker build --cache-from=coco/${CIRCLE_JOB}:${DOCKER_TAG} -t coco/${CIRCLE_JOB}:${DOCKER_TAG} ${CIRCLE_JOB}/
      - run:
          name: Create new Docker image layer cache
          command: |
            source ${BASH_ENV}
            mkdir -p /caches
            docker save -o /caches/docker-cache.tar coco/${CIRCLE_JOB}:${DOCKER_TAG}
      - save_cache:
          key: v1-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/docker-cache.tar
      - deploy:
          name: Push Docker image
          command: |
            source ${BASH_ENV}
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push coco/${CIRCLE_JOB}:${DOCKER_TAG}

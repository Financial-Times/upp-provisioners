LOAD ARCHIVE
	FROM ./data.zip  
   	INTO postgresql:///

	BEFORE LOAD DO
	$$ drop table if exists ppl_people; $$,
	$$ create table ppl_people (
		FACTSET_PERSON_ID char(8),
		FULL_NAME text,
		FIRST_NAME text,
		MIDDLE_NAME text,
		LAST_NAME text,
		SALUTATION text,
		SUFFIX_GEN text,
		SUFFIX_PROF text,
		BIRTH_YEAR text,
		BIRTH_MONTH text
	);
	$$,
	$$ drop table if exists ppl_jobs; $$,
	$$ create table ppl_jobs (
		JOB_ID integer,
		FACTSET_ENTITY_ID char(8),
		FACTSET_PERSON_ID char(8),
		ADDRESS_ID integer,
		DEPARTMENT text,
		EMAIL text,
		DIRECT_TELEPHONE text,
		INCEPTION_DATE text,
		TERMINATION_DATE text,
		ACTIVE boolean
	);
	$$,
	$$ drop table if exists ppl_job_functions; $$,
	$$ create table ppl_job_functions (
		JOB_ID integer,
		JOB_FUNCTION_CODE char(3),
		INCEPTION_DATE text,
		TERMINATION_DATE text,
		ACTIVE boolean
	);
	$$,
	$$ drop table if exists ppl_titles; $$,
	$$ create table ppl_titles (
		TITLE_KEY integer,
		FACTSET_PERSON_ID char(8),
		JOB_ID integer,
		TITLE text,
		INCEPTION_DATE text,
		TERMINATION_DATE text,
		ACTIVE boolean
	);
	$$,
	$$ drop table if exists ppl_job_function_map; $$,
	$$ create table ppl_job_function_map (
		PPL_JOB_FUNCTION_CODE char(3),
		PPL_JOB_FUNCTION_DESC text
	);
	$$

	LOAD CSV
		FROM FILENAME MATCHING ~/ppl_people.txt/ WITH ENCODING windows-1252 HAVING FIELDS (
			FACTSET_PERSON_ID,
			FULL_NAME,
			FIRST_NAME,
			MIDDLE_NAME,
			LAST_NAME,
			SALUTATION,
			SUFFIX_GEN,
			SUFFIX_PROF,
			BIRTH_YEAR,
			BIRTH_MONTH
		)
		INTO postgresql:///?ppl_people (
			FACTSET_PERSON_ID,
			FULL_NAME,
			FIRST_NAME,
			MIDDLE_NAME,
			LAST_NAME,
			SALUTATION,
			SUFFIX_GEN,
			SUFFIX_PROF,
			BIRTH_YEAR,
			BIRTH_MONTH
		)
		WITH truncate,
			skip header = 1,
			fields optionally enclosed by '"',
			fields escaped by backslash-quote,
			fields terminated by '|'

	AND LOAD CSV
		FROM FILENAME MATCHING ~/ppl_jobs.txt/ WITH ENCODING windows-1252 HAVING FIELDS (
			JOB_ID,
			FACTSET_ENTITY_ID,
			FACTSET_PERSON_ID,
			ADDRESS_ID,
			DEPARTMENT,
			EMAIL,
			DIRECT_TELEPHONE,
			INCEPTION_DATE,
			TERMINATION_DATE,
			ACTIVE
		)
		INTO postgresql:///?ppl_jobs (
			JOB_ID,
			FACTSET_ENTITY_ID,
			FACTSET_PERSON_ID,
			ADDRESS_ID,
			DEPARTMENT,
			EMAIL,
			DIRECT_TELEPHONE,
			INCEPTION_DATE,
			TERMINATION_DATE,
			ACTIVE
		)
		WITH truncate,
			skip header = 1,
			fields optionally enclosed by '"',
			fields escaped by backslash-quote,
			fields terminated by '|'

	AND LOAD CSV
		FROM FILENAME MATCHING ~/ppl_job_functions.txt/ WITH ENCODING windows-1252 HAVING FIELDS (
			JOB_ID,
			JOB_FUNCTION_CODE,
			INCEPTION_DATE,
			TERMINATION_DATE,
			ACTIVE
		)
		INTO postgresql:///?ppl_job_functions (
			JOB_ID,
			JOB_FUNCTION_CODE,
			INCEPTION_DATE,
			TERMINATION_DATE,
			ACTIVE
		)
		WITH truncate,
			skip header = 1,
			fields optionally enclosed by '"',
			fields escaped by backslash-quote,
			fields terminated by '|'

	AND LOAD CSV
		FROM FILENAME MATCHING ~/ppl_titles.txt/ WITH ENCODING windows-1252 HAVING FIELDS (
			TITLE_KEY,
			FACTSET_PERSON_ID,
			JOB_ID,
			TITLE,
			INCEPTION_DATE,
			TERMINATION_DATE,
			ACTIVE
		)
		INTO postgresql:///?ppl_titles (
			TITLE_KEY,
			FACTSET_PERSON_ID,
			JOB_ID,
			TITLE,
			INCEPTION_DATE,
			TERMINATION_DATE,
			ACTIVE
		)
		WITH truncate,
			skip header = 1,
			fields optionally enclosed by '"',
			fields escaped by backslash-quote,
			fields terminated by '|'

	AND LOAD CSV
		FROM FILENAME MATCHING ~/ppl_job_function_map.txt/ WITH ENCODING windows-1252 HAVING FIELDS (
			PPL_JOB_FUNCTION_CODE,
			PPL_JOB_FUNCTION_DESC
		)
		INTO postgresql:///?ppl_job_function_map (
			PPL_JOB_FUNCTION_CODE,
			PPL_JOB_FUNCTION_DESC
		)
		WITH truncate,
			skip header = 1,
			fields optionally enclosed by '"',
			fields escaped by backslash-quote,
			fields terminated by '|'

	FINALLY DO
	$$ CREATE INDEX pplp_index_efid ON ppl_people (FACTSET_PERSON_ID); $$,
	$$ CREATE INDEX pplj_index_jbid ON ppl_jobs (JOB_ID); $$,
	$$ CREATE INDEX ppljf_index_jbid ON ppl_job_functions (JOB_ID); $$,
	$$ CREATE INDEX pplt_index_tk ON ppl_titles (TITLE_KEY); $$,
	$$ CREATE INDEX ppljfm_index_pljfc ON ppl_job_function_map (PPL_JOB_FUNCTION_CODE); $$;
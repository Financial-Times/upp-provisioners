---
- name: provision stack
  hosts: localhost
  connection: local

  vars:
    use_suffix: false
    cluster_name: "pac-aurora-{{ cluster }}"
    dns_cluster_name: "{{cluster}}"

  vars_files:
    - vaults/vault_{{ environment_type }}.yml
    - vars/{{ aws_account }}.yml

  tasks:
  - name: Set cluster name with suffix
    when: cluster_suffix != ""
    set_fact:
       cluster_name: "pac-aurora-{{ cluster }}-{{ cluster_suffix }}"
  - name: Set DNS cluster name with suffix
    when: cluster_suffix != ""
    set_fact:
       dns_cluster_name: "{{ cluster }}-{{ cluster_suffix }}"

  - name: Log vars
    debug:
      msg: "cluster_name: '{{ cluster_name }}', cluster-suffix: {{ cluster_suffix }}, dns_cluster_name: {{dns_cluster_name}} "

  - name: Add DB Parameter Groups to eu-west-1
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}-db-group"
      state: present
      region: "eu-west-1"
      disable_rollback: true
      template: /cloudformation/aurora-db-parameter-groups.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        TagEnvironment: "{{ environment_type }}"
    register: db_param_group_eu

  - name: Add DB Parameter Groups to us-east-1
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}-db-group"
      state: present
      region: "us-east-1"
      disable_rollback: true
      template: /cloudformation/aurora-db-parameter-groups.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        TagEnvironment: "{{ environment_type }}"
    register: db_param_group_us

  - name: Add DB Subnet to eu-west-1
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}-db-subnet"
      state: present
      region: "eu-west-1"
      disable_rollback: true
      template: /cloudformation/aurora-pac-subnet.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        TagEnvironment: "{{ environment_type }}"
        DBSubnetIds: "{{ regions['eu-west-1'].subnets }}"
    register: db_subnet_eu

  - name: Launch Aurora DB Cloudformation stack in eu-west-1
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}"
      state: present
      region: "eu-west-1"
      disable_rollback: true
      template: /cloudformation/aurora-pac-master.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        DBVPC: "{{ regions['eu-west-1'].vpc }}"
        DBSubnetGroup: "{{ db_subnet_eu.stack_outputs.DBSubnetGroup }}"
        DBSecurityGroups: "{{ regions['eu-west-1'].security_groups }}"
        DBParameterGroup: "{{ db_param_group_eu.stack_outputs.DBParameterGroup }}"
        DBClusterParameterGroup: "{{ db_param_group_eu.stack_outputs.DBClusterParameterGroup }}"
        DBInstanceType: db.t2.small
        DBInstanceMasterUsername: AdminUser
        DBInstanceMasterPassword: "{{ db_master_password }}"
        DBInstanceDBName: pac
        DBBackupRetentionPeriod: "35"
        SourceSnapshot: "{{ source_snapshot }}"
        TagEnvironment: "{{ environment_type }}"
    register: aurora_eu_stack

  - name: Create Aurora CloudWatch alarms for the cluster in the EU
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}-alarms"
      state: present
      region: "eu-west-1"
      disable_rollback: true
      template: /cloudformation/aurora-cloudwatch.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        DBClusterIdentifier: "{{ aurora_eu_stack.stack_outputs.DBCluster }}"

  - include: tasks/create_cname.yml
    vars:
      dns_cname: "{{ dns_cluster_name }}-eu-rds-pac"
      hostname: "{{ aurora_eu_stack.stack_outputs.DBHostname }}"

  - include: tasks/create_pac_user.yml
    when: source_snapshot == ""
    vars:
      username: "pac"
      password: "{{ pac_db_user_password }}"
      login_host: "{{ aurora_eu_stack.stack_outputs.DBHostname }}"
      login_user: "AdminUser"
      login_password: "{{ db_master_password }}"
      privileges: "pac.*:ALL"

  - name: Retrieve EU DB Cluster ARN
    script: tasks/get_cluster_arn.sh
    environment:
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
      AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    register: aurora_eu_arn

  - name: EU Cluster ARN
    debug:
      msg: "EU ARN: '{{ aurora_eu_arn.stdout }}'"

  - name: Add DB Subnet to us-east-1
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}-db-subnet"
      state: present
      region: "us-east-1"
      disable_rollback: true
      template: /cloudformation/aurora-pac-subnet.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        TagEnvironment: "{{ environment_type }}"
        DBSubnetIds: "{{ regions['us-east-1'].subnets }}"
    register: db_subnet_us

  - name: Launch Replica Aurora DB Cloudformation stack in us-east-1
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}"
      state: present
      region: "us-east-1"
      disable_rollback: true
      template: /cloudformation/aurora-pac-replica.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        DBVPC: "{{ regions['us-east-1'].vpc }}"
        DBSecurityGroups: "{{ regions['us-east-1'].security_groups }}"
        DBParameterGroup: "{{ db_param_group_us.stack_outputs.DBParameterGroup }}"
        DBClusterParameterGroup: "{{ db_param_group_us.stack_outputs.DBClusterParameterGroup }}"
        DBSubnetGroup: "{{ db_subnet_us.stack_outputs.DBSubnetGroup }}"
        DBInstanceType: db.t2.small
        DBInstanceMasterUsername: AdminUser
        DBInstanceMasterPassword: "{{ db_master_password }}"
        DBInstanceDBName: pac
        ReplicationSourceIdentifier: "{{ aurora_eu_arn.stdout }}"
        DBBackupRetentionPeriod: "35"
        TagEnvironment: "{{ environment_type }}"
    register: aurora_us_stack

  - name: Create Aurora CloudWatch alarms for the cluster in the US
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      stack_name: "{{ cluster_name }}-alarms"
      state: present
      region: "us-east-1"
      disable_rollback: true
      template: /cloudformation/aurora-cloudwatch.yml
      template_parameters:
        EnvironmentName: "{{ cluster_name }}"
        DBClusterIdentifier: "{{ aurora_us_stack.stack_outputs.DBCluster }}"

  - include: tasks/create_cname.yml
    vars:
      dns_cname: "{{ dns_cluster_name }}-us-rds-pac"
      hostname: "{{ aurora_us_stack.stack_outputs.DBHostname }}"

  - include: tasks/create_cname.yml
    vars:
      dns_cname: "{{ dns_cluster_name }}-rds-pac"
      hostname: "{{ dns_cluster_name }}-eu-rds-pac.ft.com"

  - include: tasks/create_cname.yml
    when: use_suffix
    vars:
      dns_cname: "{{ cluster }}-rds-pac"
      hostname: "{{ dns_cluster_name }}-rds-pac"

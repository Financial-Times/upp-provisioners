---
AWSTemplateFormatVersion: '2010-09-09'
Description: Jenkins provisioner user template

Parameters:
  stackResourcesPrefix:
    Type: String
    Description: Stack resources prefix
    Default: "upp-jenkins"

Resources:
  ProvisionerSmmAccess:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${stackResourcesPrefix}-ProvisionerSmmAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ssm:GetParameter"
              - "ssm:GetParameters"
            Resource:
              - "arn:aws:ssm:*:*:parameter/"
              - "arn:aws:ssm:*:*:parameter/*"

  ProvisionerCloudFormationAccess:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${stackResourcesPrefix}-ProvisionerCloudFormationAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "cloudformation:*"
            Resource:
              - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/upp-*"
          - Effect: "Allow"
            Action:
              - "cloudformation:ListStacks"
              - "cloudformation:DescribeStacks"
            Resource: "*"

  ProvisionerEc2Access:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${stackResourcesPrefix}-ProvisionerEc2Access
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ec2:AttachVolume"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:CopyImage"
              - "ec2:CreateImage"
              - "ec2:CreateKeypair"
              - "ec2:CreateSecurityGroup"
              - "ec2:CreateSnapshot"
              - "ec2:CreateTags"
              - "ec2:CreateVolume"
              - "ec2:DeleteKeyPair"
              - "ec2:DeleteSecurityGroup"
              - "ec2:DeleteSnapshot"
              - "ec2:DeleteTags"
              - "ec2:DeleteVolume"
              - "ec2:DeregisterImage"
              - "ec2:DescribeImageAttribute"
              - "ec2:DescribeImages"
              - "ec2:DescribeInstanceStatus"
              - "ec2:DescribeInstances"
              - "ec2:DescribeKeyPairs"
              - "ec2:DescribeRegions"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeSubnets"
              - "ec2:DescribeTags"
              - "ec2:DescribeVolumes"
              - "ec2:DescribeVpcs"
              - "ec2:DetachVolume"
              - "ec2:GetPasswordData"
              - "ec2:ModifyImageAttribute"
              - "ec2:ModifyInstanceAttribute"
              - "ec2:ModifySnapshotAttribute"
              - "ec2:RegisterImage"
              - "ec2:RunInstances"
              - "ec2:StartInstances"
              - "ec2:StopInstances"
              - "ec2:TerminateInstances"
            Resource: "*"

  ProvisionerAssumeRoleAccess:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${stackResourcesPrefix}-ProvisionerAssumeRoleAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - sts:AssumeRole
            Resource:
              - "arn:aws:iam::345152836601:role/route53-iam-dnsonlyroleuppprodE94AAA36-CAPB27QPX3K8"

  ProvisionerElbAccess:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${stackResourcesPrefix}-ProvisionerElbAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "elasticloadbalancing:DescribeLoadBalancers"
              - "elasticloadbalancing:Describe*"
              - "elasticloadbalancing:Create*"
              - "elasticloadbalancing:AddTags"
              - "elasticloadbalancing:Register*"
              - "elasticloadbalancing:ModifyLoadBalancerAttributes"
              - "elasticloadbalancing:Delete*"
              - "elasticloadbalancing:Modify*"
            Resource: "*"

  ProvisionerUser:
    Type: "AWS::IAM::User"
    Properties:
      UserName: !Sub ${stackResourcesPrefix}-provisioner
      ManagedPolicyArns:
        - !Ref ProvisionerSmmAccess
        - !Ref ProvisionerCloudFormationAccess
        - !Ref ProvisionerEc2Access
        - !Ref ProvisionerAssumeRoleAccess
        - !Ref ProvisionerElbAccess

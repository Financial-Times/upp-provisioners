---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template deploys an EC2 instance and installs Factset's Loader Application

Metadata:
    AWS::CloudFormation::Interface:
        - Label: FT standard tagging
          Parameters:
             - TagEnvironment
             - TagTeamDL
             - TagSystemCode
             - TagIpCode
             - TagDescription

Parameters:
    LoaderSecurityGroup:
        Description: Security group id
        Type: String

    FTResourcesSecurityGroup:
      Description: FT wide resources security group id
      Type: String


    DBSubnetIds:
        Description: List of comma separated subnet IDs
        Type: CommaDelimitedList

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    EnvironmentTag:
        Description: Tag detail for the Environment; d for team clusters, t for staging and p for production
        Type: String
        AllowedValues:
            - 'd'
            - 't'
            - 'p'
        Default: d

    Ec2InstanceType:
        Description: Size of ec2 Instance
        Type: String
        Default: m5.large

    TagTeamDL:
        Description: Tag of the TeamDL
        Type: String
        AllowedPattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
        ConstraintDescription: There must be a valid email address for the TeamDL
        Default: universal.publishing.platform@ft.com

    TagSystemCode:
        Description: The system code for the environment
        Type: String
        Default: upp

    TagIpCode:
        Description: The environment ipCode
        Type: String
        AllowedPattern: '[P][0-9]*'
        Default: P196

    TagDescription:
        Description: Tag detail for the describing the instance
        Type: String
        Default: UPP Factset Aurora Store

Resources:
  FactsetLoader:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeType: "gp2"
            VolumeSize: 250
      IamInstanceProfile: "FT-EC2-Role"
      ImageId: "ami-08a2aed6e0a6f9c7d"
      InstanceType: !Ref Ec2InstanceType
      SecurityGroupIds: [ !Ref LoaderSecurityGroup, !Ref FTResourcesSecurityGroup ]
      SubnetId: !Select [0, !Ref DBSubnetIds ]
      Tags:
          - Key: Name
            Value: !Join ["" , ["Upp Factset Loader ", !Ref EnvironmentName]]
          - Key: environment
            Value: !Ref EnvironmentTag
          - Key: teamDL
            Value: !Ref TagTeamDL
          - Key: systemCode
            Value: !Ref TagSystemCode
          - Key: ipCode
            Value: !Ref TagIpCode
          - Key: description
            Value: !Ref TagDescription
          - Key: powercycle
            Value: '{ "start": "0 5 * * 0-6", "stop": "0 8 * * 0-6" }'

      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -x
          ###Alternative ssh method
          echo "Add authorized keys setup"
          cat > /etc/systemd/system/authorized_keys.service << EOF
          [Unit]
          Description=Update authorized_keys
          [Service]
          Type=oneshot
          ExecStartPre=/bin/sh -c 'mkdir -p /home/ec2-user/.ssh && touch /home/ec2-user/.ssh/authorized_keys'
          ExecStart=/bin/sh -c 'curl -sSL --retry 5 --retry-delay 2 -o /tmp/authorized_keys.sha512 https://raw.githubusercontent.com/Financial-Times/up-ssh-keys/master/authorized_keys.sha512'
          ExecStart=/bin/sh -c 'curl -sSL --retry 5 --retry-delay 2 -o /tmp/authorized_keys https://raw.githubusercontent.com/Financial-Times/up-ssh-keys/master/authorized_keys'
          ExecStart=/bin/sh -c 'cd /tmp/ && sha512sum -c authorized_keys.sha512 && cp authorized_keys /home/ec2-user/.ssh/authorized_keys && chmod 700 /home/ec2-user/.ssh && chmod 600 /home/ec2-user/.ssh/authorized_keys && chown -R ec2-user:ec2-user /home/ec2-user/.ssh'
          Restart=no
          EOF

          systemctl start authorized_keys.service
          systemctl enable authorized_keys.service

          cat > /etc/systemd/system/authorized_keys.timer << EOF
          [Unit]
          Description=Authorized keys timer
          [Timer]
          OnBootSec=1min
          OnUnitActiveSec=1min
          [Install]
          WantedBy=timers.target
          EOF

          systemctl start authorized_keys.timer
          systemctl enable authorized_keys.timer
          ### Install amazon-ftbase-v2
          /usr/bin/aws s3 cp s3://amazon-ftbase/amazon-ftbase2/releases/bootstrap.sh /
          bash /bootstrap.sh -s eng -e ${EnvironmentTag} --disable-yum-security-update-schedule
          cd /home/ec2-user
          wget https://dev.mysql.com/get/Downloads/Connector-ODBC/9.0/mysql-connector-odbc-9.0.0-1.el7.x86_64.rpm
          yum -y install mysql-connector-odbc-5.3.9-1.el7.x86_64.rpm
          rm mysql-connector-odbc-5.3.9-1.el7.x86_64.rpm

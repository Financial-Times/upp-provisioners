- name: Perform a lookup on the cluster CNAME
  set_fact:
    dns_lookup_output: "{{ lookup('dig', '{{cluster_name}}.in.ft.com/CNAME') }}"

- debug:
    msg: "{{dns_lookup_output}}"

- name: If it already exists, update the existing CNAME record
  uri:
    url: "https://dns-api.in.ft.com/v2/"
    method: PUT
    HEADER_x-api-key: "{{konstructor_api_key}}"
    body:
      zone: "ft.com"
      name: "{{cluster_name}}.in"
      # trim the last character of the FQDN - Dyn doesn't like the trailing dot
      oldRdata: "{{dns_lookup_output[:-1]}}"
      newRdata: "{{es_endpoint}}"
      ttl: "300"
      emailAddress: "universal.publishing.platform@ft.com"
    body_format: json
  register: dns_update_output
  when: dns_lookup_output != "NXDOMAIN"

- debug:
    msg: "{{dns_update_output}}"

- name: If it doesn't exist, create a new CNAME record
  uri:
    url: "https://dns-api.in.ft.com/v2/"
    method: POST
    HEADER_x-api-key: "{{konstructor_api_key}}"
    body:
      zone: "ft.com"
      name: "{{cluster_name}}.in"
      rdata: "{{es_endpoint}}"
      ttl: "300"
      emailAddress: "universal.publishing.platform@ft.com"
    body_format: json
  register: dns_create_output
  when: dns_lookup_output == "NXDOMAIN"

- debug:
    msg: "{{dns_create_output}}"

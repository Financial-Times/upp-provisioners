Description: "Creates S3 Bucket, SNS Topic and SQS Queues for publishing concepts in UPP."

Parameters:
  EnvironmentTag:
    Type: String
    Default: "pre-prod"
  Region:
    Type: String
    Default: "Secondary region"

Resources:
  # Create the topic and the policy.
  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Join ["", ["Concept Publish Update Notifications - ", !Ref EnvironmentTag]]

  SNSTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: ConceptNotificationTopicPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: allow-s3-publish
            Effect: Allow
            Principal:
              AWS: "*"
            Action: sns:Publish
            Resource: !Ref SNSTopic
            Condition:
              ArnLike: 
                "aws:SourceArn": !Join ["" , ["arn:aws:s3:::", "upp-concept-normalised-store-", !Ref EnvironmentTag]]
      Topics: 
        - !Ref SNSTopic

  # Create the first SQS queue - this always happens.
  SNSDeadLetterQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Join ["", ["upp-concept-publish-dead-letter-", !Ref EnvironmentTag, "-1"]]

  SQSQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Join ["", ["upp-concept-publish-notifications-", !Ref EnvironmentTag, "-1"]]
      ReceiveMessageWaitTimeSeconds: 20
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SNSDeadLetterQueue.Arn
        maxReceiveCount: 5

  SQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Version: "2012-10-17"
        Id: ConceptNotificationQueuePolicy
        Statement:
          Sid: "receive-from-sns"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Action: "SQS:SendMessage"
          Resource: !GetAtt SQSQueue.Arn
          Condition:
            ArnEquals:
              "aws:SourceArn": !Ref SNSTopic
    
  SQSSubscription:
    Type: "AWS::SNS::Subscription"
    Properties: 
      Endpoint: !GetAtt SQSQueue.Arn
      Protocol: sqs
      TopicArn: !Ref SNSTopic

  # Create the S3 bucket with the notifications.
  S3ConceptPublish:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join [ "", ["upp-concept-normalised-store-", !Ref EnvironmentTag]]
      AccessControl: AuthenticatedRead
      NotificationConfiguration:
        TopicConfigurations:
          - Event: "s3:ObjectCreated:*"
            Topic: !Ref SNSTopic

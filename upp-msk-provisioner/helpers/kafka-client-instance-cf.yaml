Parameters:

  VpcId:
    Type: String
    Description: The ID of the VPC that will access the cluster.

  KafkaClientSecurityGroupID:
    Type: String
    Description: The ID of the security group created for the MSK clients.

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Can contain only ASCII characters.

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  PublicSubnetID:
    Type: String
    Description: The Public subnet ID to put the instance in.

  TagTeamDL:
    Type: String
    Description: Email address of the team used to tag objects
    Default: "universal.publishing.platform@ft.com"

Resources:

  KafkaClientInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
      Tags:
        - Key: Name
          Value: KafkaClientInstance
        - Key: teamDL
          Value: !Ref TagTeamDL

  EC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonMSKFullAccess'
        - 'arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess'

  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: EC2MSKCFProfile
      Roles:
        - !Ref EC2Role

  KafkaClientEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref EC2InstanceProfile
      SubnetId: !Ref PublicSubnetID
      SecurityGroupIds: 
        - !Ref KafkaClientSecurityGroupID
        - !Ref KafkaClientInstanceSecurityGroup
      ImageId: !Ref LatestAmiId
      Tags:
        - Key: Name
          Value: KafkaClientInstance
        - Key: teamDL
          Value: !Ref TagTeamDL
      UserData: !Base64 >
        #!/bin/bash

        yum update -y 

        yum install python3.7 -y

        yum install java-1.8.0-openjdk-devel -y

        yum erase awscli -y

        cd /home/ec2-user

        echo "export PATH=.local/bin:$PATH" >> .bash_profile

        mkdir kafka

        mkdir mm

        cd kafka

        wget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz

        tar -xzf kafka_2.12-2.2.1.tgz

        cd /home/ec2-user

        wget https://bootstrap.pypa.io/get-pip.py

        su -c "python3.7 get-pip.py --user" -s /bin/sh ec2-user

        su -c "/home/ec2-user/.local/bin/pip3 install boto3 --user" -s /bin/sh
        ec2-user

        su -c "/home/ec2-user/.local/bin/pip3 install awscli --user" -s /bin/sh
        ec2-user

        chown -R ec2-user ./kafka

        chgrp -R ec2-user ./kafka

        chown -R ec2-user ./mm

        chgrp -R ec2-user ./mm

Outputs:
  KafkaClientEC2InstancePublicDNS:
    Description: The Public DNS for the EC2 instance
    Value: !GetAtt KafkaClientEC2Instance.PublicDnsName
